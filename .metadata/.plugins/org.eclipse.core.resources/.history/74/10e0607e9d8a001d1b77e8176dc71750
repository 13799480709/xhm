package cellmachine;

import javax.swing.JFrame;

import cell.Cell;
import field.Field;
import field.View;

public class CellMachine {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Field field = new Field(30,30);
		for(int row=0;row<field.getHeight();row++) {
			for(int col=0;col<field.getWidth();col++) {
				field.place(row, col, new Cell());
			}
		}
		for(int row=0;row<field.getHeight();row++) {
			for(int col=0;col<field.getWidth();col++) {
				Cell cell = field.get(row,col);
				if(Math.random()<0.2) {
					cell.reborn();
				}
			}
		}
		View view = new View(field);
		JFrame frame = new JFrame();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setResizable(false);
		frame.setTitle("Cells");
		frame.add(view);
		frame.pack();
		frame.setVisible(true);
		
		for (int i=0; i<1000;i++) {
			for(int row=0;row<field.getHeight();row++) {
				for(int col=0;row<field.getWidth();col++) {
					Cell cell= field.get(row, col);
					Cell[] neighbor = field.getNeighbor(row, col);
					int numOflive=0;
					for(Cell c: neighbor) {
						if(c.isAlive()) {
							numOflive++;
							
						}
					}
					System.out.print("["+row+"]["+col+"]:");
					System.out.print(cell.isAlive()?"live":"dead");
					System.out.println(":"+numOflive+"-->");
					if(cell.isAlive()) {
						if(numOflive<2||numOflive >3) {
							cell.die();
							System.out.println("die");
						}
					}else if(numOflive == 3) {
						cell.reborn();
						System.out.println("reborn");
					}
					System.out.println();
							
				}
			}
			System.out.println("UPDATE");
			frame.repaint();
			try {
				Thread.sleep(100);
			}catch(InterruptedException e) {
				e.printStackTrace();
			}
		}
	}

}
